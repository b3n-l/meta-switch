From 1faf0882118dfc3f4268d96d6697e1b668d6c7cd Mon Sep 17 00:00:00 2001
From: Jonas Gorski <jonas.gorski@bisdn.de>
Date: Thu, 28 Jan 2021 14:26:14 +0100
Subject: [PATCH] bridge/vlan: beautify output

Signed-off-by: Jonas Gorski <jonas.gorski@bisdn.de>
---
 bridge/vlan.c | 73 ++++++++++++++++++++++++++++++++++-----------------
 1 file changed, 49 insertions(+), 24 deletions(-)

diff --git a/bridge/vlan.c b/bridge/vlan.c
index e16a2ac2..7ba8468f 100644
--- a/bridge/vlan.c
+++ b/bridge/vlan.c
@@ -526,45 +526,66 @@ static int print_vlan_options(struct nlmsghdr *n, void *arg)
 {
 	struct br_vlan_msg *br_msg = NLMSG_DATA(n);
 	struct rtattr *tb[BRIDGE_VLANDB_ENTRY_MAX + 1], *pos;
-	struct bridge_vlan_info *vinfo = NULL;
 	int rem = n->nlmsg_len;
+	bool opened = false;
+
+        for (pos = (void*)(NLMSG_DATA(n) + NLMSG_ALIGN(sizeof(*br_msg)));
+             RTA_OK(pos, rem); pos =  RTA_NEXT(pos, rem)) {
+		struct bridge_vlan_info *vinfo = NULL;
+		__u16 range = 0;
+		__u8 state = 0;
+		int width;
 
-	for (pos = (void*)(NLMSG_DATA(n) + NLMSG_ALIGN(sizeof(*br_msg)));
-       RTA_OK(pos, rem);
-       pos =  RTA_NEXT(pos, rem))
-	{
 		if ((pos->rta_type & NLA_TYPE_MASK) != BRIDGE_VLANDB_ENTRY)
 			continue;
 
-		print_string(PRINT_ANY, 
-				"Interface:",
-				"Interface: %s\n",
-				ll_index_to_name(br_msg->ifindex));
-
 		parse_rtattr_nested(tb, BRIDGE_VLANDB_ENTRY_MAX, pos);
 
-		if (tb[BRIDGE_VLANDB_ENTRY_INFO]) {
+		if (tb[BRIDGE_VLANDB_ENTRY_INFO])
 			vinfo = RTA_DATA(tb[BRIDGE_VLANDB_ENTRY_INFO]);
-			printf("vlan_id = %d ", vinfo->vid);
-		}
 
-		if (tb[BRIDGE_VLANDB_ENTRY_STATE]) {
-			print_uint(PRINT_ANY,
-				   "stp_state",
-				   "stp_state %u ",
-				   rta_getattr_u8(tb[BRIDGE_VLANDB_ENTRY_STATE]));
+		if (tb[BRIDGE_VLANDB_ENTRY_STATE])
+			state = rta_getattr_u8(tb[BRIDGE_VLANDB_ENTRY_STATE]);
+		if (tb[BRIDGE_VLANDB_ENTRY_RANGE])
+			range = rta_getattr_u16(tb[BRIDGE_VLANDB_ENTRY_RANGE]);
+
+		if (!vinfo)
+			continue;
+
+		if (!range)
+			range = vinfo->vid;
+
+		if (!opened) {
+			open_json_array(PRINT_JSON, "vlan_stp_states");
+			print_color_string(PRINT_ANY, COLOR_IFNAME, "ifname",
+					   "%-" __stringify(IFNAMSIZ) "s  ",
+					   ll_index_to_name(br_msg->ifindex));
+			opened = true;
+		} else {
+			print_string(PRINT_FP, NULL, "%-"
+				     __stringify(IFNAMSIZ) "s  ", "");
 		}
+		open_json_object(NULL);
+		width = print_range("vlan", vinfo->vid, range);
+		if (width <= VLAN_ID_LEN) {
+			char buf[VLAN_ID_LEN + 1];
 
-		if (tb[BRIDGE_VLANDB_ENTRY_RANGE]) {
-			print_uint(PRINT_ANY,
-				   "range",
-				   "range %u ",
-				   rta_getattr_u16(tb[BRIDGE_VLANDB_ENTRY_RANGE]));
+			snprintf(buf, sizeof(buf), "%-*s",
+				 VLAN_ID_LEN - width, "");
+			print_string(PRINT_FP, NULL, "%s  ", buf);
+		} else {
+			fprintf(stderr, "BUG: vlan range too wide, %u\n",
+				width);
 		}
+		print_uint(PRINT_ANY, "stp_state", "%u", state);
+		close_json_object();
 
-		printf("\n");
+		print_nl();
 	}
 
+	if (opened)
+		close_json_array(PRINT_JSON, NULL);
+
 	return 0;
 }
 
@@ -572,6 +593,10 @@ static int vlan_show_options(int argc, char **argv)
 {
 	new_json_obj(json);
 
+        printf("%-" __stringify(IFNAMSIZ) "s  %-"
+			       __stringify(VLAN_ID_LEN) "s  stp-state\n", "port",
+			       "vlan-id");
+
 	if (rtnl_vlandump_req(&rth, PF_BRIDGE) < 0) {
 		perror("Cannot send dump request");
 		exit(1);
-- 
2.30.0

