diff --git a/ryu/ofproto/ofproto_common.py b/ryu/ofproto/ofproto_common.py
index 4f0d995..b85572c 100644
--- a/ryu/ofproto/ofproto_common.py
+++ b/ryu/ofproto/ofproto_common.py
@@ -32,5 +32,8 @@ OFP_SSL_PORT_OLD = 6633
 # Vendor/Experimenter IDs
 # https://rs.opennetworking.org/wiki/display/PUBLIC/ONF+Registry
 NX_EXPERIMENTER_ID = 0x00002320  # Nicira
+NX_NSH_EXPERIMENTER_ID = 0x005ad650  # Nicira Ext for Network Service Header
 BSN_EXPERIMENTER_ID = 0x005c16c7  # Big Switch Networks
 ONF_EXPERIMENTER_ID = 0x4f4e4600  # OpenFlow Extensions for 1.3.X Pack 1
+OFDPA_EXPERIMENTER_ID = 0xff00000a # SPTN Extensions
+
\ No newline at end of file
diff --git a/ryu/ofproto/ofproto_v1_3.py b/ryu/ofproto/ofproto_v1_3.py
index 8a562a8..511a635 100644
--- a/ryu/ofproto/ofproto_v1_3.py
+++ b/ryu/ofproto/ofproto_v1_3.py
@@ -866,6 +866,39 @@ ONFT_FLOW_MONITOR_CANCEL = 1870     # controller -> switch
 ONFT_FLOW_MONITOR_PAUSED = 1871     # switch -> controller
 ONFT_FLOW_MONITOR_RESUMED = 1872    # switch -> controller
 
+# EXT-230 Bundle extension
+
+# enum onf_exp_type
+ONF_ET_BUNDLE_CONTROL = 2300
+ONF_ET_BUNDLE_ADD_MESSAGE = 2301
+
+ONF_BUNDLE_CTRL_PACK_STR = '!IHH'
+ONF_BUNDLE_CTRL_SIZE = 8
+assert (calcsize(ONF_BUNDLE_CTRL_PACK_STR) ==
+        ONF_BUNDLE_CTRL_SIZE)
+
+ONF_BUNDLE_ADD_MSG_PACK_STR = '!I2xH'
+ONF_BUNDLE_ADD_MSG_SIZE = 16 - OFP_HEADER_SIZE
+assert (calcsize(ONF_BUNDLE_ADD_MSG_PACK_STR) ==
+        ONF_BUNDLE_ADD_MSG_SIZE)
+
+# enum onf_bundle_ctrl_type
+ONF_BCT_OPEN_REQUEST = 0
+ONF_BCT_OPEN_REPLY = 1
+ONF_BCT_CLOSE_REQUEST = 2
+ONF_BCT_CLOSE_REPLY = 3
+ONF_BCT_COMMIT_REQUEST = 4
+ONF_BCT_COMMIT_REPLY = 5
+ONF_BCT_DISCARD_REQUEST = 6
+ONF_BCT_DISCARD_REPLY = 7
+
+# enum onf_bundle_flags
+ONF_BF_ATOMIC = 1 << 0
+ONF_BF_ORDERED = 1 << 1
+
+# enum onf_bundle_prop_type
+ONF_ET_BPT_EXPERIMENTER = 0xffff
+
 # struct ofp_error_msg
 OFP_ERROR_MSG_PACK_STR = '!HH'
 OFP_ERROR_MSG_SIZE = 12
@@ -1147,6 +1180,7 @@ def oxm_tlv_header_extract_length(header):
         length = header & 0xff
     return length
 
+
 oxm_types = [
     oxm_fields.OpenFlowBasic('in_port', 0, type_desc.Int4),
     oxm_fields.OpenFlowBasic('in_phy_port', 1, type_desc.Int4),
@@ -1195,6 +1229,8 @@ oxm_types = [
     # EXT-233 Output match Extension
     # NOTE(yamamoto): The spec says uint64_t but I assume it's an error.
     oxm_fields.ONFExperimenter('actset_output', 43, type_desc.Int4),
+    # OFDPA match field extension
+    oxm_fields.OFDPAExperimenter('allow_vlan_translation', 24, type_desc.Int1),
 ] + nicira_ext.oxm_types
 
 oxm_fields.generate(__name__)
@@ -1218,3 +1254,4 @@ OFP_TCP_PORT = 6633
 MAX_XID = 0xffffffff
 
 OFP_NO_BUFFER = 0xffffffff
+
\ No newline at end of file
diff --git a/ryu/ofproto/oxm_fields.py b/ryu/ofproto/oxm_fields.py
index 0c5e459..20a990d 100644
--- a/ryu/ofproto/oxm_fields.py
+++ b/ryu/ofproto/oxm_fields.py
@@ -116,6 +116,8 @@ class _Experimenter(_OxmClass):
 class ONFExperimenter(_Experimenter):
     experimenter_id = ofproto_common.ONF_EXPERIMENTER_ID
 
+class OFDPAExperimenter(_Experimenter):
+    experimenter_id = ofproto_common.OFDPA_EXPERIMENTER_ID
 
 class OldONFExperimenter(_Experimenter):
     # This class is for the old version of EXT-256
@@ -131,6 +133,10 @@ class NiciraExperimenter(_Experimenter):
     experimenter_id = ofproto_common.NX_EXPERIMENTER_ID
 
 
+class NiciraNshExperimenter(_Experimenter):
+    experimenter_id = ofproto_common.NX_NSH_EXPERIMENTER_ID
+
+
 class NiciraExtended0(_OxmClass):
     """Nicira Extended Match (NXM_0)
 
@@ -221,3 +227,4 @@ def _from_jsondict(j):
     else:
         uv = (value, mask)
     return (field, uv)
+
